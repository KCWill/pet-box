{
  "{\"sourceRoot\":\"/Users/kylewilliams/turing/4module/prework/pet-box/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/kylewilliams/turing/4module/prework/pet-box\",\"filename\":\"/Users/kylewilliams/turing/4module/prework/pet-box/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/kylewilliams/turing/4module/prework/pet-box\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/kylewilliams/turing/4module/prework/pet-box/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/kylewilliams/turing/4module/prework/pet-box",
      "filename": "/Users/kylewilliams/turing/4module/prework/pet-box/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/kylewilliams/turing/4module/prework/pet-box",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/kylewilliams/turing/4module/prework/pet-box/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/kylewilliams/turing/4module/prework/pet-box/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/kylewilliams/turing/4module/prework/pet-box/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar app = express();\n\nvar cors = require('cors');\n\napp.use(cors());\napp.set('port', process.env.PORT || 3000);\napp.locals.title = 'Pet Box';\napp.get('/', function (request, response) {\n  response.send('Oh hey Pet Box');\n});\napp.listen(app.get('port'), function () {\n  console.log(\"\".concat(app.locals.title, \" is running on http://localhost:\").concat(app.get('port'), \".\"));\n});\napp.locals.pets = [];\napp.locals.pets = [{\n  id: 'a1',\n  name: 'Rover',\n  type: 'dog'\n}, {\n  id: 'b2',\n  name: 'Marcus Aurelius',\n  type: 'parakeet'\n}, {\n  id: 'c3',\n  name: 'Craisins',\n  type: 'cat'\n}];\napp.get('/api/v1/pets', function (request, response) {\n  var pets = app.locals.pets;\n  response.json({\n    pets: pets\n  });\n});\napp.get('/api/v1/pets/:id', function (request, response) {\n  var id = request.params.id;\n  var pet = app.locals.pets.find(function (pet) {\n    return pet.id === id;\n  });\n\n  if (!pet) {\n    return response.sendStatus(404);\n  }\n\n  response.status(200).json(pet);\n});\napp.use(express.json());\napp.post('/api/v1/pets', function (request, response) {\n  var id = Date.now().toString();\n  var pet = request.body;\n\n  for (var _i = 0, _arr = ['name', 'type']; _i < _arr.length; _i++) {\n    var requiredParameter = _arr[_i];\n\n    if (!pet[requiredParameter]) {\n      return response.status(422).send({\n        error: \"Expected format: { name: <String>, type: <String> }. You're missing a \\\"\".concat(requiredParameter, \"\\\" property.\")\n      });\n    }\n  }\n\n  var name = pet.name,\n      type = pet.type;\n  app.locals.pets.push({\n    name: name,\n    type: type,\n    id: id\n  });\n  response.status(201).json({\n    name: name,\n    type: type,\n    id: id\n  });\n});\napp.patch('/api/v1/pets/:id', function (request, response) {\n  var id = request.params.id;\n  var pets = app.locals.pets;\n  var pet = pets.find(function (pet) {\n    return pet.id === id;\n  });\n  var petIndex = pets.indexOf(pet);\n  var updatedData = request.body;\n  var name = updatedData.name,\n      type = updatedData.type;\n\n  if (!pet) {\n    return response.sendStatus(404);\n  }\n\n  for (var _i2 = 0, _arr2 = ['name', 'type']; _i2 < _arr2.length; _i2++) {\n    var requiredParameter = _arr2[_i2];\n\n    if (!pet[requiredParameter]) {\n      return response.status(422).send({\n        error: \"Expected format: { name: <String>, type: <String> }. You're missing a \\\"\".concat(requiredParameter, \"\\\" property.\")\n      });\n    }\n  }\n\n  pets[petIndex] = {\n    name: name,\n    type: type,\n    id: id\n  };\n  response.json({\n    pets: pets\n  });\n});\napp[\"delete\"]('/api/v1/pets/:id', function (request, response) {\n  var id = request.params.id;\n  var pets = app.locals.pets;\n  var pet = pets.find(function (pet) {\n    return pet.id === id;\n  });\n  var petIndex = pets.indexOf(pet);\n\n  if (!pet) {\n    return response.sendStatus(404);\n  }\n\n  pets.splice(petIndex, 1);\n  response.json({\n    pets: pets\n  });\n});\napp.use(express[\"static\"]('public'));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "cors",
        "use",
        "set",
        "process",
        "env",
        "PORT",
        "locals",
        "title",
        "get",
        "request",
        "response",
        "send",
        "listen",
        "console",
        "log",
        "pets",
        "id",
        "name",
        "type",
        "json",
        "params",
        "pet",
        "find",
        "sendStatus",
        "status",
        "post",
        "Date",
        "now",
        "toString",
        "body",
        "requiredParameter",
        "error",
        "push",
        "patch",
        "petIndex",
        "indexOf",
        "updatedData",
        "splice"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/kylewilliams/turing/4module/prework/pet-box/",
      "sourcesContent": [
        "const express = require('express');\nconst app = express();\nconst cors = require('cors');\n\napp.use(cors());\napp.set('port', process.env.PORT || 3000);\napp.locals.title = 'Pet Box';\n\napp.get('/', (request, response) => {\n  response.send('Oh hey Pet Box');\n});\n\napp.listen(app.get('port'), () => {\n  console.log(`${app.locals.title} is running on http://localhost:${app.get('port')}.`);\n});\n\napp.locals.pets = [];\n\napp.locals.pets = [\n  { id: 'a1', name: 'Rover', type: 'dog' },\n  { id: 'b2', name: 'Marcus Aurelius', type: 'parakeet' },\n  { id: 'c3', name: 'Craisins', type: 'cat' }\n];\n\napp.get('/api/v1/pets', (request, response) => {\n  const pets = app.locals.pets;\n\n  response.json({ pets });\n});\n\napp.get('/api/v1/pets/:id', (request, response) => {\n  const { id } = request.params;\n  const pet = app.locals.pets.find(pet => pet.id === id);\n  if (!pet) {\n    return response.sendStatus(404);\n  }\n\n  response.status(200).json(pet);\n});\n\napp.use(express.json());\n\napp.post('/api/v1/pets', (request, response) => {\n  const id = Date.now().toString();\n  const pet = request.body;\n\n  for (let requiredParameter of ['name', 'type']) {\n    if (!pet[requiredParameter]) {\n      return response\n        .status(422)\n        .send({ error: `Expected format: { name: <String>, type: <String> }. You're missing a \"${requiredParameter}\" property.` });\n    }\n  }\n\n  const { name, type } = pet;\n  app.locals.pets.push({ name, type, id });\n  response.status(201).json({ name, type, id });\n});\n\napp.patch('/api/v1/pets/:id', (request, response) => {\n  const { id } = request.params;\n  const pets = app.locals.pets;\n  const pet = pets.find(pet => pet.id === id);\n  const petIndex = pets.indexOf(pet);\n  const updatedData = request.body;\n  const { name, type } = updatedData;\n\n  if (!pet) {\n    return response.sendStatus(404);\n  }\n\n  for (let requiredParameter of ['name', 'type']) {\n    if (!pet[requiredParameter]) {\n      return response\n        .status(422)\n        .send({ error: `Expected format: { name: <String>, type: <String> }. You're missing a \"${requiredParameter}\" property.` });\n    }\n  }\n\n  pets[petIndex] = { name, type, id };\n  response.json({ pets });\n})\n\napp.delete('/api/v1/pets/:id', (request, response) => {\n  const { id } = request.params;\n  const pets = app.locals.pets;\n  const pet = pets.find(pet => pet.id === id);\n  const petIndex = pets.indexOf(pet)\n  if (!pet) {\n    return response.sendStatus(404);\n  }\n  pets.splice(petIndex,1);\n  response.json({ pets })\n})\n\napp.use(express.static('public'));"
      ]
    },
    "sourceType": "script",
    "mtime": 1593242996421
  }
}